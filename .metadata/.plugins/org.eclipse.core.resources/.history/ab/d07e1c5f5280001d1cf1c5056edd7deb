import java.util.Arrays;
import java.util.Collection;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class FlattenArray {
	 public static void main(String[] args) throws Exception{
	 Object[] array = { 1, 2, new Object[]{ 3, 4, new Object[]{ 5 }, 6, 7 }, 8, 9, 10 };
	    
     Integer[] flattenedArray = flatten(array);
     
     System.out.println(Arrays.toString(flattenedArray));
	 }
 	public static Integer[] flatten(Object[] inputArray) throws Exception {
 		System.out.println("original: "+Arrays.deepToString(inputArray));

 		Object[] flat = flattenArray(inputArray).toArray();
 		System.out.println("flat:     "+Arrays.toString(flat));
		return (Integer[]) flat;	
 	}
 	private static Stream<Object> flattenArray(Object[] array) {
 	    return Arrays.stream(array)
 	        .flatMap(o -> o instanceof Object[]? flattenArray((Object[])o): Stream.of(o));
 	}
 	
}
